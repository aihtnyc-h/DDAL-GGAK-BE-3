name: Deploy to Amazon EC2

on:
  push:
    branches: [ "feature" ]
#   pull_request:
#     branches: [ "dev" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: ddalggak
  CODE_DEPLOY_APPLICATION_NAME: ddal-ggak-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: ddalggak-codedeploy-deployment-group
  ZIP_NAME: zip -r ./finalproject.zip .
  APPLICATION2: ./src/main/resources/application.yml

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v2
      
    # (2) application.yml 추가
    - run: touch ./src/main/resources/application.yml
    - run: echo "${{ secrets.APPLICATION2 }}" > ./src/main/resources/application.yml
    - run: cat ./src/main/resources/application.yml
    
    # (3) JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Current Time
      # You may pin to the exact commit or the version.
      # uses: gerred/current-time@5172b4eff2aed61e8c68ca11076d69a2abc0b1bc
      uses: gerred/current-time@v1.0.0    
    # (4) Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean build -x test
    # (5) 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy
    # (6) Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy

   # (8) zip file 
    - name: Make zip file
      run: zip -r ./$finalproject.zip .
      shell: bash    
    
    # (5) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY2 }}
        aws-region: ${{ env.AWS_REGION }}

    # (6) 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .
    # (7) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
